# main.py

import asyncio
import logging
import sys

from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

# --- –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –º–æ–¥—É–ª–µ–π ---
import config
# –í–∞–∂–Ω–æ: –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à–∏ —Ñ–∞–π–ª—ã, —á—Ç–æ–±—ã –æ–Ω–∏ –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª–∏—Å—å –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
# –∏ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–µ—á–∞—Ç–∞–ª–∏ –∏—Ö.
# –ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ –æ–Ω–∏ –¥–æ—Ä–∞–±–æ—Ç–∞–Ω—ã –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏:
# get_strava_data(), get_garmin_data(), get_suunto_data()
import strava
import garmin
import suunto

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---
logging.basicConfig(level=logging.INFO, stream=sys.stdout)

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ ---
bot = Bot(token=config.TELEGRAM_BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
main_menu_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="Strava üèÉ", callback_data="fetch_strava")],
    [InlineKeyboardButton(text="Garmin ‚åöÔ∏è", callback_data="fetch_garmin")],
    [InlineKeyboardButton(text="Suunto üß≠", callback_data="fetch_suunto")]
])

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ –∫–Ω–æ–ø–æ–∫ ---

@dp.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    """
    –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–º–µ—Ç `/start`
    """
    await message.answer(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!\n\n"
        "–Ø —Ç–≤–æ–π –ò–ò-—Ç—Ä–µ–Ω–µ—Ä. –Ø –º–æ–≥—É –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–≤–æ–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ "
        "–∏ –¥–∞–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.\n\n"
        "–° –∫–∞–∫–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ?",
        reply_markup=main_menu_keyboard
    )


@dp.callback_query(F.data.startswith("fetch_"))
async def process_fetch_callback(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞.
    """
    service = callback.data.split("_")[1]
    user_id = callback.from_user.id
    
    await callback.message.answer(f"‚è≥ –ù–∞—á–∏–Ω–∞—é –∑–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏–∑ {service.capitalize()}...")
    
    # –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
    await callback.message.edit_reply_markup(reply_markup=None)

    data = ""
    # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞ –≤—ã–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é
    if service == "strava":
        # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω –Ω—É–∂–Ω–æ –±—Ä–∞—Ç—å –∏–∑ –ë–î –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ user_id
        data = strava.get_strava_data(config.STRAVA_ACCESS_TOKEN)
    elif service == "garmin":
        data = garmin.get_garmin_data(config.GARMIN_EMAIL, config.GARMIN_PASSWORD)
    elif service == "suunto":
        data = suunto.get_suunto_data(config.SUUNTO_ACCESS_TOKEN, config.SUUNTO_API_KEY)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await callback.message.answer(f"<b>–û—Ç—á–µ—Ç –∏–∑ {service.capitalize()}:</b>\n<pre>{data}</pre>")
    
    # --- –ó–ê–ì–õ–£–®–ö–ê –î–õ–Ø AI-–ê–ù–ê–õ–ò–ó–ê ---
    ai_recommendation = analyze_workout_with_ai(data)
    await callback.message.answer(f"<b>ü§ñ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –ò–ò:</b>\n{ai_recommendation}")
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–¥–µ–ª–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    await callback.message.answer("–•–æ—Ç–∏—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å –¥—Ä—É–≥–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞?", reply_markup=main_menu_keyboard)
    
    await callback.answer()


def analyze_workout_with_ai(workout_data: str) -> str:
    """
    –ó–ê–ì–õ–£–®–ö–ê: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é –ò–ò.
    –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–∑–æ–≤ LLM.
    """
    if "–æ—à–∏–±–∫–∞" in workout_data.lower() or "–Ω–µ –Ω–∞–π–¥–µ–Ω—ã" in workout_data.lower():
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞."
        
    # –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
    recommendation = (
        "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –ü–æ—Ö–æ–∂–µ, —ç—Ç–æ –±—ã–ª–∞ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞. "
        "–ù–µ –∑–∞–±—É–¥—å —Ö–æ—Ä–æ—à–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è. "
        "–†–µ–∫–æ–º–µ–Ω–¥—É—é —Å–ª–µ–¥—É—é—â—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É —Å–¥–µ–ª–∞—Ç—å –ª–µ–≥–∫–æ–π, —Å –ø—É–ª—å—Å–æ–º –≤ –∑–æ–Ω–µ 2."
    )
    return recommendation


async def main() -> None:
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.
    """
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())